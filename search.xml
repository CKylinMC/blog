<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用Chrome捕获元素以及调整留白简易教程]]></title>
      <url>/2018/04/02/%E4%BD%BF%E7%94%A8Chrome%E6%8D%95%E8%8E%B7%E5%85%83%E7%B4%A0%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>简单的说一下PC下使用chrome浏览器抓取页面元素的方法。<br><a id="more"></a></p>
<p><strong><code>多图预警</code> <code>皮皮虾预警</code></strong></p>
<p>本文主要介绍Chrome浏览器方面的操作。其他浏览器（如火狐）也可以起到相同效果，操作细节略有不同，建议百度。另外本篇文章<strong>不讲解过多的js，有需要请看另一篇文章(常用JS)。本文对于没有HTML基础或者代码恐惧症以及密集恐惧症患者可能会有不适，且本人文笔并不好，所以各位多包涵着。</strong></p>
<h2 id="磨刀不误砍柴工"><a href="#磨刀不误砍柴工" class="headerlink" title="磨刀不误砍柴工"></a>磨刀不误砍柴工</h2><p>chrome浏览器或者chrome浏览器相同内核的一些国产浏览器都有一个功能，这个功能在右键菜单中叫做“检查”。为了调用这个功能，我们需要先有一个支持此功能的浏览器。<br><strong>在继续看如何下载浏览器之前，请尝试按下<code>F12</code>或者<code>Ctrl</code>+<code>Shift</code>+<code>i</code>按键查看是否有个如下图的窗口蹦出来了，有的话请跳过此章节。</strong><br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/0%20-%20DevWindow.png" alt="窗口"></p>
<p>看到这里的时候你肯定是没成功。不用着急，问题不大。你可以直接去百度里搜索”chrome”，然后点击<strong>普通下载</strong>。没有看到普通下载按钮的朋友，可以直接去<a href="https://www.google.cn/chrome/" target="_blank" rel="external">Chrome 官网</a>下载。下载后双击打开一个exe文件，然后稍等片刻，浏览器便会自动打开全程十分干净无捆绑，教程结束。</p>
<p>开玩笑，工具刚刚装好。</p>
<h2 id="开始了解强大的Chrome开发人员窗口"><a href="#开始了解强大的Chrome开发人员窗口" class="headerlink" title="开始了解强大的Chrome开发人员窗口"></a>开始了解强大的Chrome开发人员窗口</h2><p>我没有仔细了解过那个窗口到底官方怎么叫，姑且就叫它开发人员窗口。这个窗口具备很多的功能，而对于本文来讲，我们只介绍其中的几个功能（其他的功能如果你用得上，那自然会知道对吧~）。</p>
<h4 id="打开窗口"><a href="#打开窗口" class="headerlink" title="打开窗口"></a>打开窗口</h4><p>打开方法很简单，如果你在之前下载那一节按照我说的做了，那么你现在屏幕上这个窗口应该还在（没在就再点一次）。或者，右键点检查：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/1%20-%20contentMenu.png" alt="右键菜单"></p>
<p>现在，如最上面那幅图一样的窗口应该出来了吧？我再放一次图(我真的没在水字数)：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/0%20-%20DevWindow.png" alt="窗口"></p>
<p>首先顶上那一行(“Elements/Console/Sources…”)是一些功能，暂时用得上前两个。第二个是js命令窗口。那第一个是什么？往下看~</p>
<h4 id="“你是谁-”-“我是Elements”-Elements面板"><a href="#“你是谁-”-“我是Elements”-Elements面板" class="headerlink" title="“你是谁?” “我是Elements” - Elements面板"></a>“你是谁?” “我是Elements” - Elements面板</h4><p>第一个ELements是展示页面元素的，也是咱们的主战场。随便打开个网页再打开这个窗口，鼠标划过这些代码，你的网页上会自动用方块显示出对应的元素：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/2.png" alt="显示元素"></p>
<p>很神奇，对吧？</p>
<p>还有更神奇的。注意开发窗格左上角。<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/3.png" alt="滴！神奇海螺"></p>
<p>这是两个按钮。左侧第一个按钮，戳一下可以问神奇海螺很多事情。</p>
<p>开玩笑。那个按钮按一下会变成蓝色。而且这个时候鼠标划过页面，自动高亮了鼠标指向的整个元素。是不是很棒？<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/4.png" alt="鼠标划过"></p>
<p>好了，现在你可以按下鼠标左键了。这样你选择的元素就会在右侧高亮并且关闭这个鼠标选择模式。</p>
<p>视线回到左侧。每当悬停选择一个元素的时候，除了为元素上色，上面其实还有一个浮动窗口：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/5.png" alt="就是这货"></p>
<p>上面有<strong><font color="red">丰</font><font color="yellow">富</font><font color="green">多</font><font color="blue">彩</font></strong>的英文字对吧？好了，现在简单介绍一下这几个英文字。</p>
<h4 id="“你到底是谁？”-“我真的是元素啊！”-如何看元素"><a href="#“你到底是谁？”-“我真的是元素啊！”-如何看元素" class="headerlink" title="“你到底是谁？” “我真的是元素啊！” - 如何看元素"></a>“你到底是谁？” “我真的是元素啊！” - 如何看元素</h4><p>还是这张图。<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/5.png" alt="还是这货"></p>
<p>首先看图上有的。<br>紫色的是TagName，标签名。标签是什么？比如你看本文，<code>&lt;p&gt;这句话&lt;/p&gt;</code>中的<code>&lt;p&gt;&lt;/p&gt;</code>就是标签，<code>p</code>就是标签名。标签一般都成对出现，常见标签有：div p h1 h2 h3 b header nav等等。(具体是做什么用的？这个不属于本文涉猎范围内，因为如果不会代码，这东西解释起来怕是要头疼的。)。上图tagname就是h2。<br>接下来就是蓝色的class。一个元素可能有多个class也有可能没有，每个class在显示的时候都会在前面加<strong>“<code>.</code>“</strong>点号来表示。class用人话来说就是设置一个规则，大家都来遵守。在一个css样式表里设定了之后，指定调用这个class的元素都会遵从那一套规则<br><code>&lt;p class=&quot;papapa&quot;&gt;这句话&lt;/p&gt;</code>中的<code>papapa</code>就是class，显示出来就是<code>.papapa</code>。上图class是<code>post-title</code>。<br>最后一项一般咱们用不到，前端的朋友会用得到，告诉你元素多大。</p>
<p>Emmmm好像少了什么…</p>
<p>(Pia的一拍脑袋)对了！…没有说ID对吧？</p>
<p>(揉揉脑袋)刚刚那个元素没有ID，看我给它加一个ID：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/6.png" alt="魔法！"></p>
<p>这次多了一个黄色的字，<code>#hello</code>，这就是元素ID。元素只能有一个ID，而且在整个网页里面唯一，一般会在前面加上<strong>“<code>#</code>“</strong>来显示。<code>&lt;p id=&quot;rua&quot;&gt;这句话&lt;/p&gt;</code>中的<code>rua</code>就是这个元素的ID。id就像是你的身份证号，因为是唯一的，所以通过身份证号可以找到你这个人。上图里的ID就是<code>hello</code>。</p>
<p>一个元素是可以同时存在ID和CLASS的。如：<code>&lt;p id=&quot;rua&quot; class=&quot;papapa&quot;&gt;这句话&lt;/p&gt;</code>，两个属性没有先后之分。但是如果你有单独设置样式，那就是后来者居上，覆盖前者的样式了。</p>
<h4 id="俺老孙会七十二变-用电脑看手机页面"><a href="#俺老孙会七十二变-用电脑看手机页面" class="headerlink" title="俺老孙会七十二变 - 用电脑看手机页面"></a>俺老孙会七十二变 - 用电脑看手机页面</h4><p>很多网站的电脑视图和手机视图是不一样的，应用的规则也不太一样。为了能让我们在Chrome电脑版调试手机页面，我们还需要一点准备。</p>
<p>还记得那两个按钮吗？<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/3.png" alt="我神奇海螺又来了"></p>
<p>刚刚说了第一个按钮，现在用的是第二个按钮。点一下，视图会变成这样：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/8.png" alt="duang~"></p>
<p>这显然不是手机页面。不过看到页面顶上的Responsive了嘛？戳一下：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/9.png" alt="戳"></p>
<p>这次就有手机了。我一般习惯用Galaxy S5来调试。点一下就好了：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/10.png" alt="S5"><br>这个设置点一次就可以了，以后只要打开开发窗口就会自动变成这样。当然关掉的话再点一下刚刚两个按钮的第二个就好了。</p>
<h4 id="我的门前三包-边距"><a href="#我的门前三包-边距" class="headerlink" title="我的门前三包 - 边距"></a>我的门前三包 - 边距</h4><p>在酷安帮别人鼓捣FA的网页的时候最常遇到的就是去除留白和去掉元素。去除留白其实是相对简单的，毕竟去除元素多一半删广告，某毒的广告，弄过的都懂，还有一些页面用js动态加固广告。</p>
<h5 id="边距在哪里呀-边距在哪里"><a href="#边距在哪里呀-边距在哪里" class="headerlink" title="边距在哪里呀 边距在哪里~"></a>边距在哪里呀 边距在哪里~</h5><p>还是这张图<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/2.png" alt="显示元素"><br>你看，“常用JS”上下各有一行黄色，那个就是边距中的外边距。你选中一个元素，并且在元素右侧或者下侧的样式设定中，滚动到最下面，就能看到有关边距的设定图：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/7.png" alt="犹如皇城一般"></p>
<p>将颜色和这个进行比对，外边距就很容易知道是<code>margin</code>而且数值是20(px)。</p>
<h5 id="边距种类千千万，看你想要哪一种"><a href="#边距种类千千万，看你想要哪一种" class="headerlink" title="边距种类千千万，看你想要哪一种"></a>边距种类千千万，看你想要哪一种</h5><p>上图有几种边距，最外侧position是位置，代表与网页的绝对位置，一般是浮动元素用的。继续是margin，外边距，一般是元素外侧的空白，大部分的去除留白请求也是这个。再往里是border，这个算是边框。再往里是padding，内边距，一般是设置子元素距离元素边的距离。中心是元素大小。这些东西简单点理解，就是：margin是你外面衣服多厚，padding就是你有多少肉，border的话就是你的皮…皮皮虾！</p>
<h5 id="拿起手术刀-开始调整"><a href="#拿起手术刀-开始调整" class="headerlink" title="拿起手术刀 - 开始调整"></a>拿起手术刀 - 开始调整</h5><blockquote>
<p>以下网页来自酷狗。m.kugou.com，本文仅仅拿来做演示，侵删。</p>
</blockquote>
<p>现在是正题了。切换到手机视图。打开酷狗。<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/kg1.png" alt="kugou"></p>
<p>然后现在已经去掉去掉了顶栏（去除方法参见隔壁文章”常用JS”，顶栏id#topFixed），可是我们看到上面有一大片空白。这肯定不是我们想要的。现在根据上文说的，首先用鼠标悬停在空白上，看看到底谁的额头这么大：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/Xshot-0094.png" alt="哇！光头！"></p>
<p>可以看到对应元素是<code>&lt;div class=&quot;bd js-bd-box&quot; id=&quot;bd&quot;&gt;...&lt;/div&gt;</code>，点击左键确定元素，然后查看右侧样式：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/Xshot-0095.png" alt="警察叔叔，就是他！"></p>
<p>看到了嘛？特别明显，在bd类下有个padding-top。刚刚说过，padding是内边距，而padding-top的意思是顶部边距。我们把鼠标悬停在这一项上，会在前面出现复选框。反选padding-top一项的复选框，相当于取消这一样式，现在查看效果：<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/Xshot-0096.png" alt="Perfact"></p>
<p>可以看到，这次效果就对了。也就是说，我们只需要去除这个padding-top即可。将复选框勾选回来。</p>
<p>我们接下来使用JS来针对性的去除padding-top效果。这里只简单讲下，具体的用法看隔壁常用JS文章。</p>
<p>我们首先看到这个元素拥有一个ID叫做bd，那么选取元素就很简单。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"bd"</span>)</div></pre></td></tr></table></figure></p>
<p>这半句js便可以选取这个元素。这个元素下有一个专门放各种样式的object，就是style。在style下，所有的css样式使用驼峰命名法在这里列出。根据驼峰命名法，padding-top就是paddingTop。于是，我们可以直接给这个样式赋值。直接给0是清除最简单的方法。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"bd"</span>).style.paddingTop=<span class="number">0</span>;</div></pre></td></tr></table></figure></p>
<p>这句js构造好了，切换到Console标签，输入，回车。可以看到效果已经完美了。这句js就可以放进FusionApp里了。<br><img src="http://7xou9r.com1.z0.glb.clouddn.com/blog/Xshot-0097.png" alt="Finished"></p>
<hr>
<p>这篇简单教学就到这里了。文笔不好多多包涵，而且之前也很少写教程相关的东西，如果有哪里不清楚，欢迎在酷安找我@Cansll蚕食。</p>
]]></content>
      
        <categories>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用JS]]></title>
      <url>/2018/04/01/%E5%B8%B8%E7%94%A8JS/</url>
      <content type="html"><![CDATA[<p>最近鼓捣FusionApp，帮别人鼓捣网页js，把常用的js在这里做一下记录。想起来什么写什么，可能不准确。<br><a id="more"></a></p>
<p><em>总结的是原生JS，通用于各个网站</em></p>
<h2 id="获取元素："><a href="#获取元素：" class="headerlink" title="获取元素："></a>获取元素：</h2><p>以下语句从头开始或从上一个语句的”;”后开始，index值为整数值。</p>
<h4 id="通过ID选择元素，仅会选择页面中的1个元素。"><a href="#通过ID选择元素，仅会选择页面中的1个元素。" class="headerlink" title="通过ID选择元素，仅会选择页面中的1个元素。"></a>通过ID选择元素，仅会选择页面中的1个元素。</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"元素ID"</span>)</div></pre></td></tr></table></figure>
<h4 id="通过class选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）"><a href="#通过class选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）" class="headerlink" title="通过class选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）"></a>通过class选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">"class名"</span>)[index]</div></pre></td></tr></table></figure>
<h4 id="通过标签名选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）"><a href="#通过标签名选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）" class="headerlink" title="通过标签名选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）"></a>通过标签名选择元素，选择时返回全部符合条件的元素，通过index选择第几个（0开始）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"标签名"</span>)[index]</div></pre></td></tr></table></figure>
<h4 id="通过css的选择器选择元素，返回第一个符合条件的元素，选择时可以综合各种参数"><a href="#通过css的选择器选择元素，返回第一个符合条件的元素，选择时可以综合各种参数" class="headerlink" title="通过css的选择器选择元素，返回第一个符合条件的元素，选择时可以综合各种参数"></a>通过css的选择器选择元素，返回第一个符合条件的元素，选择时可以综合各种参数</h4><p>标签名：直接写标签名<br>class名：.class名<br>ID：#id<br>使用时可以三项结合。另外特殊属性可以在上述元素后加[属性名]或[属性名=属性值]方法选择<br>兼容css语法如：空格” “，”&gt;”，逗号”,”，具体含义请百度</p>
<blockquote>
<p><strong>CSS选择器参考网址: <a href="http://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="external">CSS选择器参考手册&gt;&gt;</a></strong></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">"选择器"</span>)</div></pre></td></tr></table></figure>
<h4 id="通过css的选择器选择元素，使用方法与上面完全相同，但返回全部符合条件元素。使用index选择第几个。"><a href="#通过css的选择器选择元素，使用方法与上面完全相同，但返回全部符合条件元素。使用index选择第几个。" class="headerlink" title="通过css的选择器选择元素，使用方法与上面完全相同，但返回全部符合条件元素。使用index选择第几个。"></a>通过css的选择器选择元素，使用方法与上面完全相同，但返回全部符合条件元素。使用index选择第几个。</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">"选择器"</span>)</div></pre></td></tr></table></figure>
<h3 id="子选择器："><a href="#子选择器：" class="headerlink" title="子选择器："></a>子选择器：</h3><p>以下字符需要拼接在上面选择器的后面组成js语句。</p>
<h4 id="查找所有子节点，通过index选择第几个（0开始）-注意，此项返回的时候包含非元素项目"><a href="#查找所有子节点，通过index选择第几个（0开始）-注意，此项返回的时候包含非元素项目" class="headerlink" title="查找所有子节点，通过index选择第几个（0开始）[注意，此项返回的时候包含非元素项目]"></a>查找所有子节点，通过index选择第几个（0开始）[注意，此项返回的时候包含非元素项目]</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.childNodes[index]</div></pre></td></tr></table></figure>
<h4 id="返回首个子节点-可能不是元素"><a href="#返回首个子节点-可能不是元素" class="headerlink" title="返回首个子节点(可能不是元素)"></a>返回首个子节点(可能不是元素)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.firstChild</div></pre></td></tr></table></figure>
<h4 id="返回最后一个子节点-可能不是元素"><a href="#返回最后一个子节点-可能不是元素" class="headerlink" title="返回最后一个子节点(可能不是元素)"></a>返回最后一个子节点(可能不是元素)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.lastChild</div></pre></td></tr></table></figure>
<h4 id="返回首个子元素节点"><a href="#返回首个子元素节点" class="headerlink" title="返回首个子元素节点"></a>返回首个子元素节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.firstElementChild</div></pre></td></tr></table></figure>
<h4 id="返回最后一个子元素节点"><a href="#返回最后一个子元素节点" class="headerlink" title="返回最后一个子元素节点"></a>返回最后一个子元素节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.lastElementChild</div></pre></td></tr></table></figure>
<h4 id="返回当前节点的下一个节点（可能不是元素）"><a href="#返回当前节点的下一个节点（可能不是元素）" class="headerlink" title="返回当前节点的下一个节点（可能不是元素）"></a>返回当前节点的下一个节点（可能不是元素）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.nextSibling</div></pre></td></tr></table></figure>
<h4 id="返回当前节点的上一个节点（可能不是元素）"><a href="#返回当前节点的上一个节点（可能不是元素）" class="headerlink" title="返回当前节点的上一个节点（可能不是元素）"></a>返回当前节点的上一个节点（可能不是元素）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.previousSibling</div></pre></td></tr></table></figure>
<h4 id="返回当前节点的下一个元素节点"><a href="#返回当前节点的下一个元素节点" class="headerlink" title="返回当前节点的下一个元素节点"></a>返回当前节点的下一个元素节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.nextElementSibling</div></pre></td></tr></table></figure>
<h4 id="返回当前节点的上一个元素节点"><a href="#返回当前节点的上一个元素节点" class="headerlink" title="返回当前节点的上一个元素节点"></a>返回当前节点的上一个元素节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.previousElementSibling</div></pre></td></tr></table></figure>
<h2 id="常用操作："><a href="#常用操作：" class="headerlink" title="常用操作："></a>常用操作：</h2><p>以下字符需要写在上面选择字符的后面拼合js语句。</p>
<h3 id="dom操作："><a href="#dom操作：" class="headerlink" title="dom操作："></a>dom操作：</h3><p>此类操作会修改dom，请不要再循环中直接使用。</p>
<h4 id="删除："><a href="#删除：" class="headerlink" title="删除："></a>删除：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.remove();</div></pre></td></tr></table></figure>
<h3 id="class操作："><a href="#class操作：" class="headerlink" title="class操作："></a>class操作：</h3><p>偶尔有些时候删除特殊的类名就可以让多余的设置消失。</p>
<h4 id="获得class（字符串，空格分割）"><a href="#获得class（字符串，空格分割）" class="headerlink" title="获得class（字符串，空格分割）"></a>获得class（字符串，空格分割）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.className</div></pre></td></tr></table></figure>
<h4 id="获得class（数组）"><a href="#获得class（数组）" class="headerlink" title="获得class（数组）"></a>获得class（数组）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.classList</div></pre></td></tr></table></figure>
<h4 id="清空class"><a href="#清空class" class="headerlink" title="清空class"></a>清空class</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.className=<span class="string">""</span>;</div></pre></td></tr></table></figure>
<h4 id="指定固定class"><a href="#指定固定class" class="headerlink" title="指定固定class"></a>指定固定class</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.className=<span class="string">"指定class，空格分割"</span>;</div></pre></td></tr></table></figure>
<h4 id="删除特定class："><a href="#删除特定class：" class="headerlink" title="删除特定class："></a>删除特定class：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.classList.remove(<span class="string">"类名"</span>);</div></pre></td></tr></table></figure>
<h4 id="添加特定class："><a href="#添加特定class：" class="headerlink" title="添加特定class："></a>添加特定class：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.classList.add(<span class="string">"类名"</span>);</div></pre></td></tr></table></figure>
<h3 id="样式操作："><a href="#样式操作：" class="headerlink" title="样式操作："></a>样式操作：</h3><p>此类操作可以在属性值后加”!important”提高属性值的优先级。</p>
<h4 id="隐藏："><a href="#隐藏：" class="headerlink" title="隐藏："></a>隐藏：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.display=<span class="string">"none"</span>;</div></pre></td></tr></table></figure>
<h4 id="透明："><a href="#透明：" class="headerlink" title="透明："></a>透明：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.opacity=<span class="string">"0"</span>;</div></pre></td></tr></table></figure>
<h4 id="扔出屏幕："><a href="#扔出屏幕：" class="headerlink" title="扔出屏幕："></a>扔出屏幕：</h4><p>此步骤需要分两步。下面两行每行都需要组合一次选择元素的语句。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.style.position=<span class="string">"fixed"</span>;</div><div class="line">.style.left=<span class="string">"-1000px"</span>;</div></pre></td></tr></table></figure></p>
<h4 id="删除内部留白："><a href="#删除内部留白：" class="headerlink" title="删除内部留白："></a>删除内部留白：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.padding=<span class="string">"0"</span>;</div></pre></td></tr></table></figure>
<p>但是大部分情况下只需要调整一侧的留白：<br>上：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.paddingTop=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.paddingBottom=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>左<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.paddingLeft=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>右：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.paddingRight=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<h4 id="删除外部留白："><a href="#删除外部留白：" class="headerlink" title="删除外部留白："></a>删除外部留白：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.margin=<span class="string">"0"</span>;</div></pre></td></tr></table></figure>
<p>但是大部分情况下只需要调整一侧的留白：<br>上：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.marginTop=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.marginBottom=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>左:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.marginLeft=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<p>右：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.style.marginRight=<span class="string">"0"</span>;</div></pre></td></tr></table></figure></p>
<h2 id="示范"><a href="#示范" class="headerlink" title="示范"></a>示范</h2><p>删除一个id为<code>abc</code>的元素<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"abc"</span>).remove();</div></pre></td></tr></table></figure></p>
<p>隐藏一个属性<code>dpr</code>为<code>1</code>的<code>ul</code>元素<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.querySelector(<span class="string">"ul[dpr=1]"</span>).style.display=<span class="string">"none"</span>;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> fusionapp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[Chrome扩展] 哔哩哔哩智能搜索 v1.2 更新]]></title>
      <url>/2018/03/04/Chrome%E6%89%A9%E5%B1%95-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E6%99%BA%E8%83%BD%E6%90%9C%E7%B4%A2-v1-2-%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<p>哔哩哔哩智能搜索更新至1.2版本，新增常用b站链接功能</p>
<a id="more"></a>
<p>下载地址：<a href="/files/bilibiliSmartSearch_1.2.zip">bilibiliSmartSearch_1.2.zip</a></p>
<p>安装方法：</p>
<ul>
<li>下载 <code>bilibiliSmartSearch_1.2.zip</code> ，解压出文件 <code>bilibiliSmartSearch_1.2.crx</code></li>
<li>打开 Chrome 浏览器</li>
<li>访问 <code>chrome://extensions</code> 页面</li>
<li>将 <code>bilibiliSmartSearch_1.2.crx</code> 拖到页面中，安装。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 小作品 </category>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> chrome extensions </tag>
            
            <tag> 哔哩哔哩智能搜索 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[Chrome扩展] 哔哩哔哩智能搜索 v1.0]]></title>
      <url>/2018/02/25/Chrome%E6%89%A9%E5%B1%95-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E6%99%BA%E8%83%BD%E6%90%9C%E7%B4%A2-v1-0/</url>
      <content type="html"><![CDATA[<p>我把书签的哔哩哔哩智能搜索打包成了Chrome扩展，并且添加了最新专栏文章(“cv”开头)的支持。</p>
<a id="more"></a>
<p>下载地址：<a href="/files/bilibiliSmartSearch_1.0.zip">bilibiliSmartSearch_1.0.zip</a></p>
<p>安装方法：</p>
<ul>
<li>下载 <code>bilibiliSmartSearch_1.0.zip</code> ，解压出文件 <code>bilibiliSmartSearch_1.0.crx</code></li>
<li>打开 Chrome 浏览器</li>
<li>访问 <code>chrome://extensions</code> 页面</li>
<li>将 <code>bilibiliSmartSearch_1.0.crx</code> 拖到页面中，安装。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 小作品 </category>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> chrome extensions </tag>
            
            <tag> 哔哩哔哩智能搜索 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[书签更新] 哔哩哔哩智能搜索]]></title>
      <url>/2018/01/09/%E4%B9%A6%E7%AD%BE%E6%9B%B4%E6%96%B0-%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E6%99%BA%E8%83%BD%E6%90%9C%E7%B4%A2/</url>
      <content type="html"><![CDATA[<p>要考试了，复习了一天数学，大脑爆炸。赶紧敲几行代码换换脑子。<br><a id="more"></a><br>大概的代码就是这样：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">value = prompt(<span class="string">'哔哩哔哩智能搜索\n\n输入你想搜索或跳转的位置：'</span>, <span class="string">''</span>, <span class="string">'AV号/ANIME号/EP号/UID号/视频关键词'</span>);</div><div class="line">key = value.toLowerCase();</div><div class="line">baselink=<span class="string">'https://www.bilibili.com/'</span>;</div><div class="line">baselive=<span class="string">'https://live.bilibili.com/'</span>;</div><div class="line">basesearch=<span class="string">'https://search.bilibili.com/'</span>;</div><div class="line">basespace=<span class="string">'https://space.bilibili.com/'</span>;</div><div class="line">basebangumi=<span class="string">'https://bangumi.bilibili.com/'</span>;</div><div class="line">url=<span class="string">"javascript:alert('关键词为空或出现错误！');close()"</span>;</div><div class="line">cated=<span class="literal">false</span>;</div><div class="line"><span class="keyword">if</span>(value.length===<span class="number">0</span>||value==<span class="string">" "</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(key.indexOf(<span class="string">"av"</span>)===<span class="number">0</span>&amp;&amp;key.length&gt;<span class="number">2</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">	url=baselink+<span class="string">"av"</span>+value.replace(<span class="string">"av"</span>,<span class="string">""</span>).replace(<span class="string">"AV"</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(key.indexOf(<span class="string">"anime"</span>)===<span class="number">0</span>&amp;&amp;key.length&gt;<span class="number">5</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">	url=basebangumi+<span class="string">"anime/"</span>+value.replace(<span class="string">"anime"</span>,<span class="string">""</span>).replace(<span class="string">"ANIME"</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(key.indexOf(<span class="string">"ep"</span>)===<span class="number">0</span>&amp;&amp;key.length&gt;<span class="number">2</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">	url=baselink+<span class="string">"bangumi/play/ep"</span>+value.replace(<span class="string">"ep"</span>,<span class="string">""</span>).replace(<span class="string">"EP"</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(key.indexOf(<span class="string">"uid"</span>)===<span class="number">0</span>&amp;&amp;key.length&gt;<span class="number">4</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">	url=basespace+value.replace(<span class="string">"uid:"</span>,<span class="string">""</span>).replace(<span class="string">"uid"</span>,<span class="string">""</span>).replace(<span class="string">"UID:"</span>,<span class="string">""</span>).replace(<span class="string">"UID"</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(key.indexOf(<span class="string">"live"</span>)===<span class="number">0</span>&amp;&amp;key.length&gt;<span class="number">4</span>)&#123;</div><div class="line">	cated=<span class="literal">true</span>;</div><div class="line">	url=baselive+value.replace(<span class="string">"live"</span>,<span class="string">""</span>).replace(<span class="string">"LIVE"</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(!cated)&#123;</div><div class="line">	url=basesearch+<span class="string">"all?keyword="</span>+value;</div><div class="line">&#125;</div><div class="line">open(url);</div></pre></td></tr></table></figure></p>
<p>基本功能就是判断是否是AV号（视频）、EP号（动漫剧集）、ANIME号（番剧页面）、UID号（用户页面）、LIVE号（直播间），如果是直接跳转相关页面，不是的话跳入b站搜索页面。如果时以上特殊号码，请确保前缀是相关的字母（如直播间号码前缀加live）。</p>
<p><a href="javascript:value=prompt('哔哩哔哩智能搜索 - CKylinMyBLOG\n\n支持的内容：\nAV号/ANIME号/EP号/UID号/LIVE号/视频关键词\n\n输入你想搜索或跳转的位置：','','AV号/ANIME号/EP号/UID号/视频关键词');key=value.toLowerCase();baselink='https://www.bilibili.com/';baselive='https://live.bilibili.com/';basesearch='https://search.bilibili.com/';basespace='https://space.bilibili.com/';basebangumi='https://bangumi.bilibili.com/';url=&quot;javascript:alert('关键词为空或出现错误！');close()&quot;;cated=false;if(value.length===0||value==&quot; &quot;){cated=true}if(key.indexOf(&quot;av&quot;)===0&amp;&amp;key.length>2){cated=true;url=baselink+&quot;av&quot;+value.replace(&quot;av&quot;,&quot;&quot;).replace(&quot;AV&quot;,&quot;&quot;)}if(key.indexOf(&quot;anime&quot;)===0&amp;&amp;key.length>5){cated=true;url=basebangumi+&quot;anime/&quot;+value.replace(&quot;anime&quot;,&quot;&quot;).replace(&quot;ANIME&quot;,&quot;&quot;)}if(key.indexOf(&quot;ep&quot;)===0&amp;&amp;key.length>2){cated=true;url=baselink+&quot;bangumi/play/ep&quot;+value.replace(&quot;ep&quot;,&quot;&quot;).replace(&quot;EP&quot;,&quot;&quot;)}if(key.indexOf(&quot;uid&quot;)===0&amp;&amp;key.length>4){cated=true;url=basespace+value.replace(&quot;uid:&quot;,&quot;&quot;).replace(&quot;uid&quot;,&quot;&quot;).replace(&quot;UID:&quot;,&quot;&quot;).replace(&quot;UID&quot;,&quot;&quot;)}if(key.indexOf(&quot;live&quot;)===0&amp;&amp;key.length>4){cated=true;url=baselive+value.replace(&quot;live&quot;,&quot;&quot;).replace(&quot;LIVE&quot;,&quot;&quot;)}if(!cated){url=basesearch+&quot;all?keyword=&quot;+value}open(url);" onclick="alert('拖动到书签栏哦');return false" target="_blank" rel="external">哔哩哔哩智能搜索</a>（拖动到书签栏，点击书签栏中的此链接，输入AV号/ANIME号/EP号/UID号/视频关键词直达）</p>
<p>这个功能抽空合并到ViaIndex中。我注意到ViaIndex的新闻源挂了，酷狗音乐API也只能搜索不能播放了，抽空还得弄一下。新闻可能就移除了，音乐搜索API直接转成音乐搜索快捷方式。</p>
]]></content>
      
        <categories>
            
            <category> 小作品 </category>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ViaIndex更新(1.6)]]></title>
      <url>/2017/11/09/ViaIndex%E6%9B%B4%E6%96%B0-1-6/</url>
      <content type="html"><![CDATA[<p>2017年11月9日 ViaIndex周更新记录<br><a id="more"></a></p>
<h3 id="本周更新："><a href="#本周更新：" class="headerlink" title="本周更新："></a>本周更新：</h3><ul>
<li>添加 标题时段文本两种模式可以修改（暂无开关）</li>
</ul>
<p>当设置参数“titlemode”不为“TIPS”时标题切换到“基本时间”模式，默认为问候语模式。<a href="https://github.com/Cansll/ViaIndex/commit/457b402303f5f00298ac010561c943c86deee571#diff-e060d80d78ee925784f114c61f56c55cR618" target="_blank" rel="external">code</a></p>
<ul>
<li>更换x0popup为Windowise</li>
</ul>
<p>将x0popup更换为原作者的新作品Windowise。<a href="https://github.com/Cansll/ViaIndex/commit/457b402303f5f00298ac010561c943c86deee571#diff-e060d80d78ee925784f114c61f56c55cR12" target="_blank" rel="external">code</a></p>
<ul>
<li>添加 一言</li>
</ul>
<p>使用一言网的API添加了一言卡片。可以自行控制开启和关闭以及分类。<a href="https://github.com/Cansll/ViaIndex/commit/457b402303f5f00298ac010561c943c86deee571#diff-e060d80d78ee925784f114c61f56c55cR269" target="_blank" rel="external">code</a></p>
<ul>
<li>从一言卡片开始使用新的动态卡片创建逻辑</li>
</ul>
<p>现在可以动态创建新的卡片而不需要在主页创建静态的卡片占位了。<a href="https://github.com/Cansll/ViaIndex/commit/457b402303f5f00298ac010561c943c86deee571#diff-e060d80d78ee925784f114c61f56c55cR1089" target="_blank" rel="external">code</a></p>
<ul>
<li><p>版本号进1.6</p>
</li>
<li><p>现在ViaIndex会自动判断是开发测试模式还是发布模式</p>
</li>
</ul>
<p>会自动设定当前页面变量。后面会有一些显示只在开发测试模式中。<a href="https://github.com/Cansll/ViaIndex/commit/36037af36acc3b965563c0ad83a0ca5bb0414aee#diff-e060d80d78ee925784f114c61f56c55cR33" target="_blank" rel="external">code</a></p>
<ul>
<li>添加 新闻</li>
</ul>
<p>使用大谷哥API添加了新闻卡片，可以点开查看简短的介绍，可选择分类。<a href="https://github.com/Cansll/ViaIndex/commit/36037af36acc3b965563c0ad83a0ca5bb0414aee#diff-e060d80d78ee925784f114c61f56c55cR484" target="_blank" rel="external">code</a></p>
<ul>
<li>修改主页页脚</li>
</ul>
<p>将主页的页脚中作者博客更新为现在的地址。<a href="https://github.com/Cansll/ViaIndex/commit/ec0de4b4b0d6a1cb59ea65844d3f6f03fdaa2b84#diff-eacf331f0ffc35d4b482f1d15a887d3bR108" target="_blank" rel="external">code</a></p>
<ul>
<li>正在测试设置卡片</li>
</ul>
<p>设置卡片仍在规划阶段，一个小的DEMO已经添加到了ViaIndex中，但仍然有BUG。<a href="https://github.com/Cansll/ViaIndex/commit/ec0de4b4b0d6a1cb59ea65844d3f6f03fdaa2b84#diff-e060d80d78ee925784f114c61f56c55cR1398" target="_blank" rel="external">code</a></p>
<hr>
<h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul>
<li style="list-style: none"><input type="checkbox"> 尝试支持自定义常用网站功能</li>
<li style="list-style: none"><input type="checkbox"> 尝试支持设置导入导出以及更多自定义方案。</li>
</ul>
<hr>
<h1 id="ViaIndex"><a href="#ViaIndex" class="headerlink" title="ViaIndex"></a>ViaIndex</h1><p>My own via index<br>一个给自己胡乱写的手机浏览器主页<br>叫ViaIndex原因是一开始是为Via浏览器做的自用开始页面</p>
<p>仅支持竖屏手机。</p>
<p><a href="javascript:location.href=&quot;http://via.ckylin-mc.cn&quot;" target="_blank" rel="external">地址：http://via.ckylin-mc.cn</a></p>
<div style="text-align:center">
  <div class="github-card" data-user="Cansll" data-repo="ViaIndex" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div>
</div>
<script src="/github-card-lib/githubcard.js"></script>
]]></content>
      
        <categories>
            
            <category> 编程开发 </category>
            
            <category> 小作品 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ViaIndex </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[喜马拉雅音频工具] 更新：新增文件名格式和用户名字典]]></title>
      <url>/2017/09/18/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85%E9%9F%B3%E9%A2%91%E5%B7%A5%E5%85%B7-%E6%9B%B4%E6%96%B0%EF%BC%9A%E6%96%B0%E5%A2%9E%E6%96%87%E4%BB%B6%E5%90%8D%E6%A0%BC%E5%BC%8F%E5%92%8C%E7%94%A8%E6%88%B7%E5%90%8D%E5%AD%97%E5%85%B8/</url>
      <content type="html"><![CDATA[<p>根据同学实际使用时的需求，进一步改进程序。<br><a id="more"></a></p>
<h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p>同学在实际使用的时候由于我文件名写死在程序内所以需要每次下载完文件后手动修改文件名。而且由于我班同学注册喜马拉雅的用户名并不一定是真名注册（emmm我也不是…真名注册的心也太大了…）所以交作业的时候还得知道每个人的用户名是什么，改成对应人名。好的，需求来了：</p>
<ul>
<li>允许自定义文件名</li>
<li>要求可以直接替换掉同学的用户名</li>
</ul>
<p>（大概以上两点实现以后基本上就不用反复修改文件名了）</p>
<p>想法是这样的：新建一个配置文件和字典文件，用简单的<code>key=value</code>格式。<br>配置文件可以放文件名格式，字典文件放每个同学的名字对应关系。</p>
<p>放上两个文件创建和读取的方法：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">readDict</span><span class="params">()</span></span>&#123;</div><div class="line">    $dict = dirname(<span class="keyword">__FILE__</span>).DIRECTORY_SEPARATOR.<span class="string">"dict.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(!file_exists($dict)) &#123;</div><div class="line">        fclose(fopen($dict,<span class="string">"w"</span>));</div><div class="line">        output(<span class="string">"[*] 字典文件创建成功!"</span>);</div><div class="line">    &#125;</div><div class="line">    $lines = file($dict);<span class="comment">//str_replace(PHP_EOL,"",file($config));</span></div><div class="line">    $dtdata = <span class="keyword">array</span>();</div><div class="line">    <span class="keyword">foreach</span>($lines <span class="keyword">as</span> $line)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($line)) <span class="keyword">continue</span>;</div><div class="line">        $result = explode(<span class="string">"="</span>,str_replace(PHP_EOL,<span class="string">""</span>,$line));</div><div class="line">        $dtdata[$result[<span class="number">0</span>]] = $result[<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> $dtdata;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">readConfig</span><span class="params">()</span></span>&#123;</div><div class="line">    $config = dirname(<span class="keyword">__FILE__</span>).DIRECTORY_SEPARATOR.<span class="string">"options.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(!file_exists($config)) &#123;</div><div class="line">        $f = fopen($config,<span class="string">"w"</span>);</div><div class="line">        fwrite($f,<span class="string">"nameformat=%name-%title-%album-%time-%ran"</span>.PHP_EOL.<span class="string">"autoConvert=false"</span>.PHP_EOL);</div><div class="line">        fclose($f);</div><div class="line">        output(<span class="string">"[*] 配置文件创建成功!"</span>);</div><div class="line">        output(<span class="string">"[*] 文件名可用参数：\n\n\t%name\t\t真实姓名(无对应时输出用户名)\n\t%user\t\t用户名\n\t%duration\t音频长度(秒)\n\t%time\t\t中文相对时间\n\t%album\t\t专辑名\n\t%realtime\t上传日期\n\t%title\t\t音频标题\n\t%ran\t\t随机数\n"</span>);</div><div class="line">    &#125;</div><div class="line">    $lines = file($config);<span class="comment">//str_replace(PHP_EOL,"",file($config));</span></div><div class="line">    $cfg = <span class="keyword">array</span>();</div><div class="line">    <span class="keyword">foreach</span>($lines <span class="keyword">as</span> $line)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($line)) <span class="keyword">continue</span>;</div><div class="line">        $result = explode(<span class="string">"="</span>,str_replace(PHP_EOL,<span class="string">""</span>,$line));</div><div class="line">        $cfg[$result[<span class="number">0</span>]] = $result[<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> $cfg;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为懒么，所以把首次创建和读取写在一起，虽然这样会导致每次下载都会读取一遍，但是因为每个链接都是单次输入的，因为读取两个小文件导致的延误不会太高，所以一次读取的事情放到下次更新。</p>
<p>先判断文件是否存在，不存在就创建并写入默认内容。如果是配置文件，则顺便输出一下相关的变量。</p>
<p>(autoConvert参数是一个正在实现的功能，见下文)</p>
<p>这里使用<code>file()</code>函数把所有文件按行读取，然后逐行判断。如果是空行就跳过，然后分割<code>=</code>，等号前面是<code>key</code>，等号后面是<code>value</code>，然后把结果直接放进配置数组中。这里暂时还是缺少一些安全判断的。</p>
<p>由于按照行读取会把行尾换行符一并读上，所以分割之前要把换行符替换掉。</p>
<p>然后就是字典匹配人名，一个很简单的函数：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getName</span><span class="params">($name)</span></span>&#123;</div><div class="line">    $dict = readDict();</div><div class="line">    <span class="keyword">if</span>(array_key_exists($name,$dict))&#123;</div><div class="line">        $fn = $dict[$name];</div><div class="line">        output(<span class="string">"[*] 用户字典：'$name'已替换为'$fn'"</span>);</div><div class="line">        <span class="keyword">return</span> $fn;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> $name;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>首先读取字典，然后判断是否有指定的名字，然后直接读取值返回。</p>
<p>之后是获取文件名：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFileName</span><span class="params">($r)</span></span>&#123;</div><div class="line">    $rules = <span class="keyword">array</span>(</div><div class="line">        <span class="string">"%name"</span>=&gt;getName(t($r[<span class="string">'nickname'</span>])),</div><div class="line">        <span class="string">"%user"</span>=&gt;t($r[<span class="string">'nickname'</span>]),</div><div class="line">        <span class="string">"%duration"</span>=&gt;t($r[<span class="string">'duration'</span>]),</div><div class="line">        <span class="string">"%time"</span> =&gt; t($r[<span class="string">'time_until_now'</span>]),</div><div class="line">        <span class="string">"%album"</span> =&gt; t($r[<span class="string">'album_title'</span>]),</div><div class="line">        <span class="string">"%realtime"</span> =&gt; t($r[<span class="string">'formatted_created_at'</span>]),</div><div class="line">        <span class="string">"%title"</span> =&gt; t($r[<span class="string">'title'</span>]),</div><div class="line">        <span class="string">"%ran"</span> =&gt; rand(<span class="number">00001</span>, <span class="number">99999</span>),</div><div class="line">    );</div><div class="line">    $cfg = readConfig();</div><div class="line">    $base = <span class="string">"%name-%title-%album-%time-%ran"</span>;</div><div class="line">    <span class="keyword">if</span>(array_key_exists(<span class="string">"nameformat"</span>,$cfg))&#123;</div><div class="line">        $base = $cfg[<span class="string">'nameformat'</span>];</div><div class="line">    &#125;</div><div class="line">    $filename = strtr($base,$rules).<span class="string">".m4a"</span>;</div><div class="line">    <span class="keyword">return</span> $filename;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里将之前<code>$r</code>也就是获取到的api数据传入以便获得所有需要的数据。我将所有定义的变量对应了值放在一个数组中，读取配置。如果配置中有设置文件名，那么就使用设定的文件名，否则使用预设的文件名。然后再把文件名中的所用变量替换成对应值。注意这里依然缺少两个安全判断，一个是文件名格式，一个是变量的格式，如果格式不正确也是不能正确创建文件的，这个我以后更新。因为之前看到一片文章说<code>strtr</code>替换速度比<code>str_replace</code>快4倍，所以这里用strtr。（其实还是懒，虽然差不了几个字母…）。最后拼上<code>.m4a</code>后缀。</p>
<p>最后插入到主线程。打开程序时自动创建文件，就先读取一次所有配置就好了：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line">output($copyright.<span class="string">"\n\n"</span>.$logo);</div><div class="line"><span class="comment">//init config</span></div><div class="line">output();</div><div class="line">readConfig();</div><div class="line">readDict();</div><div class="line"><span class="comment">//UI MODE</span></div><div class="line">output(<span class="string">"\n\n[*] 欢迎使用喜马拉雅FM音频下载工具！"</span>);</div><div class="line">......</div></pre></td></tr></table></figure></p>
<p>然后是获取文件名这里直接换掉：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line"><span class="comment">//        $filename = "$user-$title-$album-$time-$ran.m4a";</span></div><div class="line">        $filename = getFileName($r);</div><div class="line">        raw_output(t(<span class="string">"\n\n[*] 准备下载..."</span>).<span class="string">"($filename)"</span>);</div><div class="line">        $path = dirname(<span class="keyword">__FILE__</span>) . DIRECTORY_SEPARATOR . <span class="string">"audios"</span> . DIRECTORY_SEPARATOR;</div><div class="line">......</div></pre></td></tr></table></figure></p>
<p>我顺便把后面的路径中的分隔符换了一下。</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>关于之间说的MP3和M4A格式转换的问题，有两个方案。一个是放一个ffmpeg什么的调用转换，使用<code>exec()</code>命令调用就行。另一个是我无意中发现的另一个api，从喜马拉雅后台揪出来的api：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.ximalaya.com/center/voice/download?trackId=</div></pre></td></tr></table></figure>
<p>这条API会下载原始大小的MP3（说起来我上传的是wav来着）虽然还是转码过的但是已经是mp3了，大小很可观。而且…</p>
<h5 id="我在浏览器里访问的时候能正常下载，调用时就不行，502-Bad-Gateway…"><a href="#我在浏览器里访问的时候能正常下载，调用时就不行，502-Bad-Gateway…" class="headerlink" title="我在浏览器里访问的时候能正常下载，调用时就不行，502 Bad Gateway…"></a>我在浏览器里访问的时候能正常下载，调用时就不行，502 Bad Gateway…</h5><p>emmmmm…再看看吧…</p>
<hr>
<p>本次更新 commit:</p>
<p><a href="https://github.com/Cansll/XiMaLaYa-Get/commit/4b5c14b6746994e2c4a8dab84578c9ff0fe714ef" target="_blank" rel="external">添加功能 · Cansll/XiMaLaYa-Get@ab5c14b</a></p>
<div style="text-align:center">
  <div class="github-card" data-user="Cansll" data-repo="XiMaLaYa-Get" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div>
</div>
<script src="/github-card-lib/githubcard.js"></script>

<p>2017年9月18日<br>CKylinMC</p>
]]></content>
      
        <categories>
            
            <category> 小作品 </category>
            
            <category> 编程开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 喜马拉雅 </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用书签]]></title>
      <url>/2017/09/18/usefulbookmarks/</url>
      <content type="html"><![CDATA[<p>可能用得到的一些书签，需要的时候拖动到书签栏就好了</p>
<h3 id="一键复制网页信息"><a href="#一键复制网页信息" class="headerlink" title="一键复制网页信息"></a>一键复制网页信息</h3><p><a href="javascript:prompt('手动复制：',document.title+'_链接：'+location.href)" onclick="alert('拖动到书签栏哦')" target="_blank" rel="external">一键复制网页信息</a>（拖动到书签栏，在需要分享页面点击即可复制内容）</p>
<h3 id="蓝墨云班课-PDF-下载"><a href="#蓝墨云班课-PDF-下载" class="headerlink" title="蓝墨云班课 - PDF 下载"></a>蓝墨云班课 - PDF 下载</h3><p><a href="javascript:PDFViewerApplication.download()" onclick="alert('拖动到书签栏哦')" target="_blank" rel="external">蓝墨云班课 PDF 下载</a>（拖动到书签栏，打开资源中的PDF，然后点击书签栏中的此链接）</p>
<h3 id="B站快速访问"><a href="#B站快速访问" class="headerlink" title="B站快速访问"></a>B站快速访问</h3><p><a href="javascript:open('https://www.bilibili.com/av'+prompt('输入av号','','avxxxxxx').replace('av',''))" onclick="alert('拖动到书签栏哦')" target="_blank" rel="external">B站快速访问</a>（拖动到书签栏，点击书签栏中的此链接，输入av号跳转）</p>
<h3 id="B站智能搜索"><a href="#B站智能搜索" class="headerlink" title="B站智能搜索"></a>B站智能搜索</h3><p><a href="javascript:value=prompt('哔哩哔哩智能搜索 - CKylinMyBLOG\n\n支持的内容：\nAV号/ANIME号/EP号/UID号/LIVE号/视频关键词\n\n输入你想搜索或跳转的位置：','','AV号/ANIME号/EP号/UID号/视频关键词');key=value.toLowerCase();baselink='https://www.bilibili.com/';baselive='https://live.bilibili.com/';basesearch='https://search.bilibili.com/';basespace='https://space.bilibili.com/';basebangumi='https://bangumi.bilibili.com/';url=&quot;javascript:alert('关键词为空或出现错误！');close()&quot;;cated=false;if(value.length===0||value==&quot; &quot;){cated=true}if(key.indexOf(&quot;av&quot;)===0&amp;&amp;key.length>2){cated=true;url=baselink+&quot;av&quot;+value.replace(&quot;av&quot;,&quot;&quot;).replace(&quot;AV&quot;,&quot;&quot;)}if(key.indexOf(&quot;anime&quot;)===0&amp;&amp;key.length>5){cated=true;url=basebangumi+&quot;anime/&quot;+value.replace(&quot;anime&quot;,&quot;&quot;).replace(&quot;ANIME&quot;,&quot;&quot;)}if(key.indexOf(&quot;ep&quot;)===0&amp;&amp;key.length>2){cated=true;url=baselink+&quot;bangumi/play/ep&quot;+value.replace(&quot;ep&quot;,&quot;&quot;).replace(&quot;EP&quot;,&quot;&quot;)}if(key.indexOf(&quot;uid&quot;)===0&amp;&amp;key.length>4){cated=true;url=basespace+value.replace(&quot;uid:&quot;,&quot;&quot;).replace(&quot;uid&quot;,&quot;&quot;).replace(&quot;UID:&quot;,&quot;&quot;).replace(&quot;UID&quot;,&quot;&quot;)}if(key.indexOf(&quot;live&quot;)===0&amp;&amp;key.length>4){cated=true;url=baselive+value.replace(&quot;live&quot;,&quot;&quot;).replace(&quot;LIVE&quot;,&quot;&quot;)}if(!cated){url=basesearch+&quot;all?keyword=&quot;+value}open(url);" onclick="alert('拖动到书签栏哦')" target="_blank" rel="external">哔哩哔哩智能搜索</a>（拖动到书签栏，点击书签栏中的此链接，输入AV号/ANIME号/EP号/UID号/视频关键词直达）</p>
<p><strong>哔哩哔哩智能搜索已经升级为Chrome扩展，书签版本不再维护更新！</strong></p>
<p><a href="/tags/哔哩哔哩智能搜索/">传送门&gt;&gt;&gt;</a></p>
<h3 id="特殊跳转链接"><a href="#特殊跳转链接" class="headerlink" title="特殊跳转链接"></a>特殊跳转链接</h3><p><a href="javascript:(function(){let a=prompt('输入特殊协议链接：','','');if(a) open(a);else console.error('空链接 '+a)})()" onclick="alert('拖动到书签栏哦')" target="_blank" rel="external">特殊跳转链接</a>（拖动到书签栏，点击书签栏中的此链接，输入特殊协议链接跳转）</p>
<blockquote>
<p>此书签用于测试。比如一些特殊协议的app链接”ms-settings”之类的。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 闲言碎语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书签 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[喜马拉雅音频获取小工具]]></title>
      <url>/2017/09/16/%E5%96%9C%E9%A9%AC%E6%8B%89%E9%9B%85%E9%9F%B3%E9%A2%91%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>学校新开了口语课，要求在家把课文什么的背诵时录音，上传到喜马拉雅平台，老师通过订阅学生，收听音频方式收作业。前两天老师说要收集班上所有人的音频文件，但是喜马拉雅音频手机中可以下载但是不能导出，电脑上web版本更是没有直接下载的链接，我在网上搜索时无意中搜到了通过喜马拉雅音频ID获取音频文件地址的官方API，而且API没有任何认证可以直接调用，于是我就想利用我会的这一点点编程语言尝试着写一个快速的小程序来做到直接下载。（音频ID同样出现在每个音频页面的URL中。）<br><a id="more"></a></p>
<h2 id="Javascript版-失败"><a href="#Javascript版-失败" class="headerlink" title="Javascript版 - 失败"></a>Javascript版 - 失败</h2><p>由于我目前掌握的相对好一点的就是JS和PHP，为了后面能够方便设计界面我优先选择的是JS。网页方面用的就是我之前自己写的<a href="https://github.com/Cansll/KyMD" target="_blank" rel="external">KyMD</a>作为样式，虽然简陋但是够用。网页很简单，就加了一个输入框，一个按钮还有一个文本域用于存放结果。</p>
<p>为了能够确认输入的是我需要的音频页面链接，我首先对传入的URL进行判断。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkIsTrackUrl</span>(<span class="params">url</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(!url) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</div><div class="line">    a.href = url;</div><div class="line">    <span class="keyword">if</span>(!a.hostname==<span class="string">"www.ximalaya.com"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    <span class="keyword">if</span>(a.pathname.indexOf(<span class="string">"/sound/"</span>)===<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    <span class="keyword">var</span> start = a.pathname.indexOf(<span class="string">"/sound/"</span>)+<span class="number">7</span>;</div><div class="line">    <span class="keyword">var</span> track = a.pathname.slice(start).replace(<span class="regexp">/\//</span>,<span class="string">""</span>);</div><div class="line">    <span class="keyword">return</span> track;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果为空直接返回false。<br>喜马拉雅音频页面的链接结构大概是 <code>http://www.ximalaya.com/XXXXXXXX/sound/XXXXXXXX/</code><br>最后那一串XXXXXXXX便是我需要的音频ID。<br>然后创建一个a元素，把url穿进去，这样就可以直接获取到url的各部分结构了。先查域名是不是喜马拉雅的域名，如果不是返回false，然后判断路径中是否存在 <code>/sound/</code> 这段字符，如果出现则代表是喜马拉雅音频的链接，否则其他的专辑页面啊什么的全都返回false。<br>最后，取出 <code>/sound</code> 后面的字符。我先获取到 <code>/sound/</code> 的字符位置，然后+7跳过 <code>/sound/</code>，这样就能获取到最后的几位数字了。为了确保链接最后不会多出一个路径符号，我这里再次的替换一次，确保取出来的只是音频ID不是其他的什么东西。</p>
<p>之后就可以进入另一个函数了<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTrackDownUrl</span>(<span class="params">url</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> track = checkIsTrackUrl(url);</div><div class="line">    <span class="keyword">if</span>(track===<span class="literal">false</span>)&#123;</div><div class="line">        dialog.setTitle(<span class="string">"Track 地址无效"</span>).setContent(<span class="string">"请输入正确的Track地址! (地址格式验证不通过，请确保地址全部小写且合法)"</span>).show();</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.debug(<span class="string">"Track ID Get: "</span>+track);</div><div class="line">    <span class="keyword">var</span> apiPath = <span class="string">"http://www.ximalaya.com/tracks/"</span>+track+<span class="string">".json"</span>;</div><div class="line">    $.getJSON(apiPath,<span class="function"><span class="keyword">function</span> (<span class="params">r,s</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(s!==<span class="number">200</span>)&#123;</div><div class="line">            dialog.setTitle(<span class="string">"获取信息时出现错误"</span>).setContent(<span class="string">"获取信息时出现错误： HTTP "</span>+s+<span class="string">" ERROR"</span>).show();</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">var</span> id = r.id,</div><div class="line">            download = r.play_path_64,</div><div class="line">            duration = r.duration,</div><div class="line">            title = r.title,</div><div class="line">            user = r.nickname,</div><div class="line">            album = r.album_title,</div><div class="line">            info = r.intro,</div><div class="line">            time = r.time_until_now;</div><div class="line">        <span class="keyword">var</span> audiolength = duration / <span class="number">60</span>;</div><div class="line">        dialog.setTitle(<span class="string">"来自"</span>+user+<span class="string">"的音频"</span>).setContent(</div><div class="line">            <span class="string">"&lt;b&gt;音频:&lt;/b&gt; "</span>+title +<span class="string">"&lt;br&gt;"</span>+</div><div class="line">            <span class="string">"&lt;b&gt;长度:&lt;/b&gt; "</span>+audiolength+<span class="string">"&lt;br&gt;"</span>+</div><div class="line">            <span class="string">"&lt;b&gt;专辑:&lt;/b&gt; "</span>+album+<span class="string">"&lt;br&gt;"</span>+</div><div class="line">            <span class="string">"&lt;b&gt;上传时间:&lt;/b&gt; "</span>+time+<span class="string">"&lt;br&gt;"</span>+</div><div class="line">            <span class="string">"&lt;b&gt;介绍:&lt;/b&gt; "</span>+info+<span class="string">"&lt;br&gt;"</span>+</div><div class="line">            <span class="string">"&lt;b&gt;下载地址:&lt;/b&gt; "</span>+download+<span class="string">"&lt;br&gt;"</span></div><div class="line">        ).show();</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"result"</span>).value = download;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>先判断 <code>checkIsTrackUrl</code> 函数的返回，若是false则url没通过检查，直接弹出错误然后返回。这里 <code>dialog</code> 是我二次封装的一个 <code>dialog-polyfill</code> 对话框。这些代码都在我的 <code>KyMD</code> 中。<br>之后拼接api地址，使用jquery的获取json方式获得结果。</p>
<h2 id="PHP版-成功"><a href="#PHP版-成功" class="headerlink" title="PHP版 成功"></a>PHP版 成功</h2><p>如上方法在实际测试时，发现出现了跨站的问题，所以就只能舍弃用户界面，换成php语言重写成命令行程序。<br>我直接使用了Minecraft游戏服务器的 PHP7 运行环境，无需配置就可以使用。<br>由于是命令行程序，所以我先写了3个用于命令行输入输出的函数：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($out)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $out = t($out);</div><div class="line">    fwrite(STDOUT, <span class="string">"\n$out"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">raw_output</span><span class="params">($out)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">// $out = t($out);</span></div><div class="line">    fwrite(STDOUT, <span class="string">"\n$out"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ask</span><span class="params">($out)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    output($out);</div><div class="line">    <span class="keyword">return</span> trim(fgets(STDIN));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span><span class="params">($t)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">return</span> iconv(<span class="string">"UTF-8"</span>,<span class="string">"GBK"</span>,$t);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>由于我的目标是windows系统，所以这里所有的中文字符均需要转码。output函数会在每一次输出前转码，但是如果我需要输出已经转好的文字，则不能使用output，于是我单独写了一个raw_output用于直接输出。ask函数很简单，就是先输出一段字，然后等待输入。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">    output(<span class="string">"\n\n&gt;[ 新的下载任务 ]----------------------\n"</span>);</div><div class="line">    $res = ask(<span class="string">"[?] 输入一个音频链接: "</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($res)) &#123;</div><div class="line">        output(<span class="string">"[!] 请输入一个链接！!"</span>);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ($res == <span class="string">"exit"</span>) &#123;</div><div class="line">        output(<span class="string">"\n[!] 退出."</span>);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ......</div></pre></td></tr></table></figure></p>
<p>我把所有主程序代码放在了一个循环里，这样可以在执行完一次下载后立刻准备好下一次下载。<br>我首先输出“请输入一个音频链接”，提示输入一个完整音频链接，然后判断用户输入是否为空，空则直接提示“输入一个链接”然后继续循环，开始下一次接受输入。如果用户输入的是 <code>exit</code> ，则直接跳出循环。循环外没有单独的代码，所以跳出循环意味着结束程序。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line">$urlinfos = parse_url($res);</div><div class="line">$track = getTrack($urlinfos);</div><div class="line"><span class="keyword">if</span> ($track === <span class="keyword">false</span>) <span class="keyword">continue</span>;</div><div class="line">$track = str_replace(<span class="string">"/"</span>, <span class="string">""</span>, $track);</div><div class="line">output(<span class="string">"\n[+] Track ID: $track \n[*] 正在获取信息..."</span>);</div><div class="line">......</div></pre></td></tr></table></figure></p>
<p>这里调用了一下 <code>parse_url</code> 代替js中的创建a标间方式来解析URL。解析的结果交给函数处理，和js版本一样，如果解析成功返回音频ID，否则返回false：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTrack</span><span class="params">($info)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($info)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">if</span> ($info[<span class="string">"host"</span>] != <span class="string">"www.ximalaya.com"</span>) &#123;</div><div class="line">        output(<span class="string">"[!] 请输入完整链接!"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    $sound = stristr($info[<span class="string">"path"</span>], <span class="string">"/sound/"</span>);</div><div class="line">    <span class="keyword">if</span> ($sound === <span class="keyword">false</span>) &#123;</div><div class="line">        output(<span class="string">"[!] 请确保输入的是音频页面的链接!"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    $sound = str_replace(<span class="string">"/"</span>, <span class="string">""</span>, str_replace(<span class="string">"/sound/"</span>, <span class="string">""</span>, $sound));</div><div class="line">    <span class="keyword">return</span> $sound;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在处理音频ID时同样是多替换一次路径符号。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">    ......</div><div class="line">    $api = <span class="string">"http://www.ximalaya.com/tracks/$track.json"</span>;</div><div class="line"><span class="comment">//    $httpinfo;</span></div><div class="line"><span class="comment">//    $res = http_get($api, $httpinfo);</span></div><div class="line"><span class="comment">//    if ($httpinfo['response_code'] != "200") &#123;</span></div><div class="line"><span class="comment">//        output("HTTP " . $httpinfo['response_code'] . " ERROR. JSON data get failed.");</span></div><div class="line"><span class="comment">//        continue;</span></div><div class="line"><span class="comment">//    &#125;</span></div><div class="line">    ......</div></pre></td></tr></table></figure></p>
<p>拼接api。本想使用http_get函数直接完成获取操作，但是发现http_get要求额外的php扩展，而这个扩展恰好我没有装…<br>由于CURL还不是很熟，以前都是很简单的文件获取直接用 <code>file_get_content</code> 了，所以这次就直接找了一个cUrl的封装函数，修改到适合直接用了…</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cUrl</span><span class="params">($url, $header = null, $data = null)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">//初始化curl</span></div><div class="line">    $curl = curl_init();</div><div class="line">    <span class="comment">//设置cURL传输选项</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> (is_array($header)) &#123;</div><div class="line"></div><div class="line">        curl_setopt($curl, CURLOPT_HTTPHEADER, $header);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">    curl_setopt($curl, CURLOPT_URL, $url);</div><div class="line">    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</div><div class="line">    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($data)) &#123;<span class="comment">//post方式</span></div><div class="line">        curl_setopt($curl, CURLOPT_POST, <span class="number">1</span>);</div><div class="line">        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//获取采集结果</span></div><div class="line">    $output = curl_exec($curl);</div><div class="line"></div><div class="line">    <span class="comment">//关闭cURL链接</span></div><div class="line">    curl_close($curl);</div><div class="line"></div><div class="line">    <span class="comment">//解析json</span></div><div class="line">    $json = json_decode($output, <span class="keyword">true</span>);</div><div class="line">    <span class="comment">//判断json还是xml</span></div><div class="line">    <span class="keyword">if</span> ($json) &#123;</div><div class="line">        <span class="keyword">return</span> $json;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">#验证xml</span></div><div class="line">        libxml_disable_entity_loader(<span class="keyword">true</span>);</div><div class="line">        <span class="comment">#解析xml</span></div><div class="line">        $xml = simplexml_load_string($output, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</div><div class="line">        <span class="keyword">return</span> $xml;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后直接调用。。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">    ......</div><div class="line">    $r = cUrl($api);</div><div class="line"><span class="comment">//    $r = json_decode($res);</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($r)) &#123;</div><div class="line">        output(<span class="string">"[!] 解析数据时出错."</span>);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    ......</div></pre></td></tr></table></figure>
<p>先判断json的解析结果。如果是空的，则解析出错。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">    ......</div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($r[<span class="string">'res'</span>])) &#123;</div><div class="line">        output(<span class="string">"[+] 已经定位音频:\n\n"</span>);</div><div class="line">        $down = $r[<span class="string">'play_path'</span>];</div><div class="line">        $duration = $r[<span class="string">'duration'</span>] / <span class="number">60</span>;</div><div class="line">        $title = t($r[<span class="string">'title'</span>]);</div><div class="line">        $user = t($r[<span class="string">'nickname'</span>]);</div><div class="line">        $realtime = t($r[<span class="string">'formatted_created_at'</span>]);</div><div class="line">        $time = t($r[<span class="string">'time_until_now'</span>]);</div><div class="line">        $album = t($r[<span class="string">'album_title'</span>]);</div><div class="line">        $intro = t($r[<span class="string">'intro'</span>]);</div><div class="line">        raw_output(t(<span class="string">"上传用户:"</span>).<span class="string">" $user \n"</span>.t(<span class="string">"音频长度: "</span>).<span class="string">"$duration min \n"</span>.t(<span class="string">"音频题目: "</span>).<span class="string">"$title \n"</span>.t(<span class="string">"所在专辑:"</span>).<span class="string">" $album \n"</span>.t(<span class="string">"上传时间: "</span>).<span class="string">"$time / $realtime \n"</span>.t(<span class="string">"音频描述:"</span>).<span class="string">" $intro \n"</span>.t(<span class="string">"音频链接:"</span>).<span class="string">" $down"</span>);</div><div class="line">    ......</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        output(<span class="string">"[!] 数据查询出错，检查输入的链接. ($res)"</span>);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    ......</div></pre></td></tr></table></figure>
<p>这里是获取音频信息并打印在屏幕上。我从官方API中摘出大概对下载音频时标注和区分每个人音频的大概就是这些了。检查res是否存在是为了如果音频不存在，那么依然会返回json但是不存在res键值。这种情况一般意味着输入的链接有问题。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">    ......</div><div class="line">        $ran = rand(<span class="number">00001</span>, <span class="number">99999</span>);</div><div class="line"><span class="comment">//        $filename = str_replace(" ","","$user-$title-$time-$ran.m4a");</span></div><div class="line">        $filename = <span class="string">"$user-$title-$album-$time-$ran.m4a"</span>;</div><div class="line">        raw_output(t(<span class="string">"\n\n[*] 准备下载..."</span>).<span class="string">"($filename)"</span>);</div><div class="line">        $path = dirname(<span class="keyword">__FILE__</span>) . <span class="string">"\\audios\\"</span>;</div><div class="line">        $filepath = $path . $filename;</div><div class="line">        @mkdir($path);</div><div class="line">        raw_output(t(<span class="string">"[+] 输出目录: "</span>).<span class="string">"$path"</span>);</div><div class="line">    ......</div></pre></td></tr></table></figure>
<p>这一部分时我拼接输出文件路径的地方。直接输出在php文件的audios子目录下。文件名格式就是”用户名-音频标题-音频专辑-时间-随机数.m4a”。我习惯在输出文件时在文件名后加随机数避免重复。这个时间我用的是官方API中的”time_until_now”。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">......</div><div class="line">    $target = fopen($down, <span class="string">"rb"</span>);</div><div class="line">    $newfile = <span class="string">''</span>;</div><div class="line">    <span class="keyword">if</span> ($target) &#123;</div><div class="line">        $newfile = fopen($filepath, <span class="string">"wb"</span>);</div><div class="line">        <span class="keyword">if</span> ($newfile) &#123;</div><div class="line">            output(<span class="string">"[*] 正在下载..."</span>);</div><div class="line">            <span class="keyword">while</span> (!feof($target)) &#123;</div><div class="line">                fwrite($newfile, fread($target, <span class="number">1024</span> * <span class="number">8</span>), <span class="number">1024</span> * <span class="number">8</span>);</div><div class="line">            &#125;</div><div class="line">            output(<span class="string">"[*] 文件传输完成，正在进行最后的操作..."</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//fclose($newfile);</span></div><div class="line">            raw_output(t(<span class="string">"[!] 文件写入时出错，无法打开本地文件，请检查权限."</span>).<span class="string">"($filepath)"</span>);</div><div class="line">            fclose($target);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">//fclose($target);</span></div><div class="line">        output(<span class="string">"[!] 远程文件查找出错，无法下载，请检查网络.($down)"</span>);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ($target) fclose($target);</div><div class="line">    <span class="keyword">if</span> ($newfile) fclose($newfile);</div><div class="line">    raw_output(t(<span class="string">"\n\n[+] 文件已经成功下载到 "</span>).<span class="string">"$filepath"</span>);</div><div class="line">    output(<span class="string">"文件大小: "</span>.getSizeT($filepath).<span class="string">"\n"</span>);</div><div class="line">    <span class="keyword">continue</span>;</div><div class="line">......</div></pre></td></tr></table></figure>
<p>这一部分就是写文件和获取文件的地方了。<br>我先尝试连接喜马拉雅的m4a文件。（后来想想其实应该先打开本地文件的…），如果打不开则代表无法找到远程文件。如果打开了，就继续尝试打开本地的目标输出文件。本地的文件如果打不开，则代表缺少写权限等问题，关闭远程连接，抛出问题然后继续循环。如果两个连接都没有问题，那么OK，可以开始下载了。</p>
<p>下载之后关闭两个连接，输出下载成功消息以及文件位置，以及文件大小。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSizeT</span><span class="params">($file)</span></span>&#123;</div><div class="line">    $fs = filesize($file);</div><div class="line">    <span class="keyword">if</span>($fs===<span class="keyword">false</span>) <span class="keyword">return</span> <span class="string">"UNKNOW"</span>;</div><div class="line">    $size = round(($fs/<span class="number">1024</span>)/<span class="number">1024</span>,<span class="number">2</span>).<span class="string">"MB"</span>;</div><div class="line">    <span class="keyword">return</span> $size;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>到此整个程序完成，试着跑了一下，效果还是不错的。<br>这个项目作为一次练手也作为帮别人写的一个工具，以后不会再更新。本文写的时候有一些新的改动并没有同步到gh中，可以以本文为准。<br><a href="https://github.com/Cansll/XiMaLaYa-Get" target="_blank" rel="external">喜马拉雅音频获取工具 Github</a></p>
<div style="text-align:center">
  <div class="github-card" data-user="Cansll" data-repo="XiMaLaYa-Get" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div>
</div>
<script src="/github-card-lib/githubcard.js"></script>

<p>CKylinMC<br>2017年9月13日</p>
]]></content>
      
        <categories>
            
            <category> 编程开发 </category>
            
            <category> 小作品 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 喜马拉雅 </tag>
            
            <tag> php </tag>
            
            <tag> kymd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我来了，Hexo!]]></title>
      <url>/2017/09/16/%E6%88%91%E6%9D%A5%E4%BA%86%EF%BC%8CHexo/</url>
      <content type="html"><![CDATA[<p>之前尝试过wordpress，typecho，hubpress等多个博客软件和静态博客软件，现在，终于选择在自己的电脑上搭建hexo并托管到gh pages了。<br><a id="more"></a></p>
<p>之前因为没有资金所以只能使用GH Pages这种简单的静态网页托管方式，由于懒所以总想找一个有可视化编辑的静态网页编辑器，然后就看见了hubpress。起初hubpress给我的印象非常好，但是慢慢的，很多问题暴露出来，比如连接慢和软件不成熟，最后不得不停止使用hubpress。然而我因为本地没有一个完美的markdown编辑器，所以还是想找一个带在线编辑器的博客程序，然后就看见了hexo。hexo有一个拓展叫hexo-admin，也是一个简单的在线管理的插件，正好电脑上有nodejs的环境就部署了。感觉还不错的，尤其是优雅的NexT主题。</p>
<p>所以这次应该不会变了！</p>
<p>2017.09.16<br>CKylinMC</p>
]]></content>
      
        <categories>
            
            <category> 闲言碎语 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[分类]]></title>
      <url>/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h3 id="想了好久，还是用Hexo了啊…"><a href="#想了好久，还是用Hexo了啊…" class="headerlink" title="想了好久，还是用Hexo了啊…"></a>想了好久，还是用Hexo了啊…</h3><p>一开始是懒，真的懒，想找个托管博客程序但是访问慢，手里的域名也会浪费，后来用静态网站，确定在GH Pages搭建以后看到了 hubpress.io ，好像不错，就部署起来。<a id="more"></a><br>这个倒是提供了后台页面可以直接的编辑，但是</p>
<ul>
<li>编辑语言是AsciiDoc不是Markdown</li>
<li>单页面程序js加载卡啊卡啊卡啊</li>
<li>Bug好多啊，老提交不上去，一开始给作者反馈作者还帮忙修复一下，后来再出现作者都不理我了（实际上就推了3个文章，头一个和最后一个都出了问题，头一个是我的锅没注意日期格式，最后一个真的不是我的锅…422…）</li>
<li>不能多设备要不然所有文章都重叠了</li>
</ul>
<p>反正就是不成熟，不过创意真的不错的。bug太多终究是用不了，还是走常规路线吧。看了看好像jekyll和hexo是比较热门的静态生成，我因为之前有安nodejs就直接用hexo了。配置不麻烦，选主题花了半天，最后还是确定用这个大众脸了。</p>
<p>希望这次不会有问题吧。。</p>
<p>我的GH：<br><div style="text-align:center">
  <div class="github-card" data-user="Cansll" data-repo="" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div>
</div>
<script src="/github-card-lib/githubcard.js"></script>
</p>
<p>2017年9月16日<br>CKylinMC</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[标签]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
